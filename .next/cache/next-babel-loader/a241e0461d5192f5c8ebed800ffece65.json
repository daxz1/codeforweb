{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/cheemad/Projects/codeforweb/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from \"next/head\";\nimport { Layout } from \"../components\";\nimport fetch from 'isomorphic-unfetch';\nimport { format, compareAsc } from 'date-fns';\n/**\n *\n * @param articles\n * @returns {*}\n * @constructor\n */\n\nconst HomePage = articles => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Welcome\")), __jsx(\"section\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"columns is-multiline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, _Object$keys(articles).map((article, key) => {\n    const {\n      source,\n      urlToImage,\n      author,\n      publishedAt,\n      title,\n      description\n    } = articles[article];\n    return __jsx(\"div\", {\n      className: key === 0 || key === 3 ? 'column is-two-thirds' : 'column',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, key === 0 && __jsx(\"div\", {\n      className: \"columns is-multiline hero--custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-one-third\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"title is-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, title), __jsx(\"h2\", {\n      className: \"subtitle is-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, description), __jsx(\"p\", {\n      className: \"subtitle is-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"By \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, author), \" from \", source.name, \" on \", format(new Date(publishedAt), 'EEEE Do/MM/yyyy'))), __jsx(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: urlToImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), key >= 1 && __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, description));\n  }))));\n};\n\nHomePage.getInitialProps = async () => {\n  try {\n    const res = await fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=d6fd84244a5240e49fbabded8f5ac2b3&pageSize=3');\n    const {\n      status,\n      articles\n    } = await res.json();\n\n    if (status === 'ok') {\n      return articles;\n    }\n\n    return {};\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/cheemad/Projects/codeforweb/pages/index.js"],"names":["React","Head","Layout","fetch","format","compareAsc","HomePage","articles","map","article","key","source","urlToImage","author","publishedAt","title","description","name","Date","getInitialProps","res","status","json","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AAEA;;;;;;;AAMA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAKE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,aAAYA,QAAZ,EAAsBC,GAAtB,CAA0B,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC3C,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA;AANI,QAOFT,QAAQ,CAACE,OAAD,CAPZ;AASA,WACE;AAAK,MAAA,SAAS,EAAEC,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAArB,GAAyB,sBAAzB,GAAkD,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,GAAG,KAAK,CAAR,IACD;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BK,KAA5B,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,WAA/B,CAFF,EAGE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,MAAT,CAAhC,YAAgEF,MAAM,CAACM,IAAvE,UAAiFb,MAAM,CAAE,IAAIc,IAAJ,CAASJ,WAAT,CAAF,EAAyB,iBAAzB,CAAvF,CAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEF,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CAFF,EAaGF,GAAG,IAAI,CAAP,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMM,WAAN,CAdF,CADF;AAmBD,GA7BA,CADH,CADF,CALF,CADF;AA0CD,CA3CD;;AA8CAV,QAAQ,CAACa,eAAT,GAA2B,YAAY;AACrC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,oGAAD,CAAvB;AACA,UAAM;AAACkB,MAAAA,MAAD;AAASd,MAAAA;AAAT,QAAqB,MAAMa,GAAG,CAACE,IAAJ,EAAjC;;AAEA,QAAID,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOd,QAAP;AACD;;AACD,WAAO,EAAP;AACD,GARD,CAQE,OAAOgB,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO,EAAP;AACD;AACF,CAbD;;AAeA,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport Head from \"next/head\";\nimport {Layout} from \"../components\";\nimport fetch from 'isomorphic-unfetch'\nimport { format, compareAsc } from 'date-fns';\n\n/**\n *\n * @param articles\n * @returns {*}\n * @constructor\n */\nconst HomePage = (articles) => {\n  return (\n    <Layout>\n      <Head>\n        <title>Welcome</title>\n      </Head>\n\n      <section className=\"section\">\n        <div className=\"columns is-multiline\">\n          {Object.keys(articles).map((article, key) => {\n            const {\n              source,\n              urlToImage,\n              author,\n              publishedAt,\n              title,\n              description\n            } = articles[article];\n\n            return (\n              <div className={key === 0 || key === 3 ? 'column is-two-thirds' : 'column'}>\n                {key === 0 &&\n                <div className='columns is-multiline hero--custom'>\n                  <div className='column is-one-third'>\n                    <h1 className='title is-4'>{title}</h1>\n                    <h2 className='subtitle is-6'>{description}</h2>\n                    <p className='subtitle is-7'>By <strong>{author}</strong> from {source.name} on {format( new Date(publishedAt), 'EEEE Do/MM/yyyy')}</p>\n                  </div>\n                  <div className='column'>\n                    <img src={urlToImage}/>\n                  </div>\n                </div>\n                }\n                {key >= 1 &&\n                <div>{description}</div>\n                }\n              </div>\n            )\n          })}\n        </div>\n      </section>\n    </Layout>\n  )\n};\n\n\nHomePage.getInitialProps = async () => {\n  try {\n    const res = await fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=d6fd84244a5240e49fbabded8f5ac2b3&pageSize=3');\n    const {status, articles} = await res.json();\n\n    if (status === 'ok') {\n      return articles;\n    }\n    return {};\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n};\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}